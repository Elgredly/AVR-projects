
Keypad ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005ba  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  000005ba  0000062e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000650  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000680  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  000006bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001316  00000000  00000000  000007bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000088d  00000000  00000000  00001ad2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a98  00000000  00000000  0000235f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001ac  00000000  00000000  00002df8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c3  00000000  00000000  00002fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b50  00000000  00000000  00003467  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00003fb7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea eb       	ldi	r30, 0xBA	; 186
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 38       	cpi	r26, 0x82	; 130
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 2d 02 	call	0x45a	; 0x45a <main>
  7a:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <ADC_init>:
	   1		  0			*Not implemented*
	   1		  1			Volt = 2.56v
	 
	 */
	 
	 SET_BIT(ADMUX,REFS0); //ADC voltage = AVCC
  82:	87 b1       	in	r24, 0x07	; 7
  84:	80 64       	ori	r24, 0x40	; 64
  86:	87 b9       	out	0x07, r24	; 7
	 //SET_BIT(ADMUX,REFS1); //Both of REFS1 & REFS0 if Activated it will take 2.56V
	 //SET_BIT(ADMUX,MUX4); // 2 pins ADC
	 SET_BIT(ADMUX,MUX0); //set PA1 to be ADC pin
  88:	87 b1       	in	r24, 0x07	; 7
  8a:	81 60       	ori	r24, 0x01	; 1
  8c:	87 b9       	out	0x07, r24	; 7
	 SET_BIT(ADCSRA,ADEN); //enable ADC
  8e:	86 b1       	in	r24, 0x06	; 6
  90:	80 68       	ori	r24, 0x80	; 128
  92:	86 b9       	out	0x06, r24	; 6
	 
	 // set ADC clock (MCU_cloc/64k)
	 SET_BIT(ADCSRA,ADPS2);
  94:	86 b1       	in	r24, 0x06	; 6
  96:	84 60       	ori	r24, 0x04	; 4
  98:	86 b9       	out	0x06, r24	; 6
	 SET_BIT(ADCSRA,ADPS1);
  9a:	86 b1       	in	r24, 0x06	; 6
  9c:	82 60       	ori	r24, 0x02	; 2
  9e:	86 b9       	out	0x06, r24	; 6
  a0:	08 95       	ret

000000a2 <ADC_u16Read>:

unsigned short ADC_u16Read()
{
	unsigned short read_val;
	
	SET_BIT(ADCSRA,ADSC);  //set Start Conversion bit
  a2:	86 b1       	in	r24, 0x06	; 6
  a4:	80 64       	ori	r24, 0x40	; 64
  a6:	86 b9       	out	0x06, r24	; 6
	while(READ_BIT(ADCSRA,ADSC)==1); //wait until flag become 1
  a8:	36 99       	sbic	0x06, 6	; 6
  aa:	fe cf       	rjmp	.-4      	; 0xa8 <ADC_u16Read+0x6>
	SET_BIT(ADCSRA,ADIF); //clear ADIF
  ac:	86 b1       	in	r24, 0x06	; 6
  ae:	80 61       	ori	r24, 0x10	; 16
  b0:	86 b9       	out	0x06, r24	; 6
	read_val = (ADCL); 
  b2:	24 b1       	in	r18, 0x04	; 4
	read_val |= (ADCH<<8); //read ADC high &low 
  b4:	85 b1       	in	r24, 0x05	; 5
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	98 2f       	mov	r25, r24
  ba:	88 27       	eor	r24, r24
	return read_val;
}
  bc:	82 2b       	or	r24, r18
  be:	08 95       	ret

000000c0 <DIO_vsetPINDir>:
		case 'C':
		PORTC&=0xf0;
		PORTC|=value;
		case 'D':
		PORTD&=0xf0;
		PORTD|=value;
  c0:	82 34       	cpi	r24, 0x42	; 66
  c2:	19 f1       	breq	.+70     	; 0x10a <DIO_vsetPINDir+0x4a>
  c4:	18 f4       	brcc	.+6      	; 0xcc <DIO_vsetPINDir+0xc>
  c6:	81 34       	cpi	r24, 0x41	; 65
  c8:	39 f0       	breq	.+14     	; 0xd8 <DIO_vsetPINDir+0x18>
  ca:	08 95       	ret
  cc:	83 34       	cpi	r24, 0x43	; 67
  ce:	b1 f1       	breq	.+108    	; 0x13c <DIO_vsetPINDir+0x7c>
  d0:	84 34       	cpi	r24, 0x44	; 68
  d2:	09 f4       	brne	.+2      	; 0xd6 <DIO_vsetPINDir+0x16>
  d4:	4c c0       	rjmp	.+152    	; 0x16e <DIO_vsetPINDir+0xae>
  d6:	08 95       	ret
  d8:	41 30       	cpi	r20, 0x01	; 1
  da:	59 f4       	brne	.+22     	; 0xf2 <DIO_vsetPINDir+0x32>
  dc:	2a b3       	in	r18, 0x1a	; 26
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_vsetPINDir+0x28>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_vsetPINDir+0x24>
  ec:	82 2b       	or	r24, r18
  ee:	8a bb       	out	0x1a, r24	; 26
  f0:	08 95       	ret
  f2:	2a b3       	in	r18, 0x1a	; 26
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_vsetPINDir+0x3e>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	6a 95       	dec	r22
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_vsetPINDir+0x3a>
 102:	80 95       	com	r24
 104:	82 23       	and	r24, r18
 106:	8a bb       	out	0x1a, r24	; 26
 108:	08 95       	ret
 10a:	41 30       	cpi	r20, 0x01	; 1
 10c:	59 f4       	brne	.+22     	; 0x124 <DIO_vsetPINDir+0x64>
 10e:	27 b3       	in	r18, 0x17	; 23
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_vsetPINDir+0x5a>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	6a 95       	dec	r22
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_vsetPINDir+0x56>
 11e:	82 2b       	or	r24, r18
 120:	87 bb       	out	0x17, r24	; 23
 122:	08 95       	ret
 124:	27 b3       	in	r18, 0x17	; 23
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 c0       	rjmp	.+4      	; 0x130 <DIO_vsetPINDir+0x70>
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	6a 95       	dec	r22
 132:	e2 f7       	brpl	.-8      	; 0x12c <DIO_vsetPINDir+0x6c>
 134:	80 95       	com	r24
 136:	82 23       	and	r24, r18
 138:	87 bb       	out	0x17, r24	; 23
 13a:	08 95       	ret
 13c:	41 30       	cpi	r20, 0x01	; 1
 13e:	59 f4       	brne	.+22     	; 0x156 <DIO_vsetPINDir+0x96>
 140:	24 b3       	in	r18, 0x14	; 20
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_vsetPINDir+0x8c>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_vsetPINDir+0x88>
 150:	82 2b       	or	r24, r18
 152:	84 bb       	out	0x14, r24	; 20
 154:	08 95       	ret
 156:	24 b3       	in	r18, 0x14	; 20
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	02 c0       	rjmp	.+4      	; 0x162 <DIO_vsetPINDir+0xa2>
 15e:	88 0f       	add	r24, r24
 160:	99 1f       	adc	r25, r25
 162:	6a 95       	dec	r22
 164:	e2 f7       	brpl	.-8      	; 0x15e <DIO_vsetPINDir+0x9e>
 166:	80 95       	com	r24
 168:	82 23       	and	r24, r18
 16a:	84 bb       	out	0x14, r24	; 20
 16c:	08 95       	ret
 16e:	41 30       	cpi	r20, 0x01	; 1
 170:	59 f4       	brne	.+22     	; 0x188 <DIO_vsetPINDir+0xc8>
 172:	21 b3       	in	r18, 0x11	; 17
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	02 c0       	rjmp	.+4      	; 0x17e <DIO_vsetPINDir+0xbe>
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	6a 95       	dec	r22
 180:	e2 f7       	brpl	.-8      	; 0x17a <DIO_vsetPINDir+0xba>
 182:	82 2b       	or	r24, r18
 184:	81 bb       	out	0x11, r24	; 17
 186:	08 95       	ret
 188:	21 b3       	in	r18, 0x11	; 17
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	02 c0       	rjmp	.+4      	; 0x194 <DIO_vsetPINDir+0xd4>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	6a 95       	dec	r22
 196:	e2 f7       	brpl	.-8      	; 0x190 <DIO_vsetPINDir+0xd0>
 198:	80 95       	com	r24
 19a:	82 23       	and	r24, r18
 19c:	81 bb       	out	0x11, r24	; 17
 19e:	08 95       	ret

000001a0 <DIO_write>:
 1a0:	82 34       	cpi	r24, 0x42	; 66
 1a2:	19 f1       	breq	.+70     	; 0x1ea <DIO_write+0x4a>
 1a4:	18 f4       	brcc	.+6      	; 0x1ac <DIO_write+0xc>
 1a6:	81 34       	cpi	r24, 0x41	; 65
 1a8:	39 f0       	breq	.+14     	; 0x1b8 <DIO_write+0x18>
 1aa:	08 95       	ret
 1ac:	83 34       	cpi	r24, 0x43	; 67
 1ae:	b1 f1       	breq	.+108    	; 0x21c <DIO_write+0x7c>
 1b0:	84 34       	cpi	r24, 0x44	; 68
 1b2:	09 f4       	brne	.+2      	; 0x1b6 <DIO_write+0x16>
 1b4:	4c c0       	rjmp	.+152    	; 0x24e <DIO_write+0xae>
 1b6:	08 95       	ret
 1b8:	41 30       	cpi	r20, 0x01	; 1
 1ba:	59 f4       	brne	.+22     	; 0x1d2 <DIO_write+0x32>
 1bc:	2b b3       	in	r18, 0x1b	; 27
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <DIO_write+0x28>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	6a 95       	dec	r22
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <DIO_write+0x24>
 1cc:	82 2b       	or	r24, r18
 1ce:	8b bb       	out	0x1b, r24	; 27
 1d0:	08 95       	ret
 1d2:	2b b3       	in	r18, 0x1b	; 27
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_write+0x3e>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	6a 95       	dec	r22
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_write+0x3a>
 1e2:	80 95       	com	r24
 1e4:	82 23       	and	r24, r18
 1e6:	8b bb       	out	0x1b, r24	; 27
 1e8:	08 95       	ret
 1ea:	41 30       	cpi	r20, 0x01	; 1
 1ec:	59 f4       	brne	.+22     	; 0x204 <DIO_write+0x64>
 1ee:	28 b3       	in	r18, 0x18	; 24
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_write+0x5a>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_write+0x56>
 1fe:	82 2b       	or	r24, r18
 200:	88 bb       	out	0x18, r24	; 24
 202:	08 95       	ret
 204:	28 b3       	in	r18, 0x18	; 24
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_write+0x70>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	6a 95       	dec	r22
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_write+0x6c>
 214:	80 95       	com	r24
 216:	82 23       	and	r24, r18
 218:	88 bb       	out	0x18, r24	; 24
 21a:	08 95       	ret
 21c:	41 30       	cpi	r20, 0x01	; 1
 21e:	59 f4       	brne	.+22     	; 0x236 <DIO_write+0x96>
 220:	25 b3       	in	r18, 0x15	; 21
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_write+0x8c>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	6a 95       	dec	r22
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_write+0x88>
 230:	82 2b       	or	r24, r18
 232:	85 bb       	out	0x15, r24	; 21
 234:	08 95       	ret
 236:	25 b3       	in	r18, 0x15	; 21
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_write+0xa2>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_write+0x9e>
 246:	80 95       	com	r24
 248:	82 23       	and	r24, r18
 24a:	85 bb       	out	0x15, r24	; 21
 24c:	08 95       	ret
 24e:	41 30       	cpi	r20, 0x01	; 1
 250:	59 f4       	brne	.+22     	; 0x268 <DIO_write+0xc8>
 252:	22 b3       	in	r18, 0x12	; 18
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 c0       	rjmp	.+4      	; 0x25e <DIO_write+0xbe>
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	6a 95       	dec	r22
 260:	e2 f7       	brpl	.-8      	; 0x25a <DIO_write+0xba>
 262:	82 2b       	or	r24, r18
 264:	82 bb       	out	0x12, r24	; 18
 266:	08 95       	ret
 268:	22 b3       	in	r18, 0x12	; 18
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_write+0xd4>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	6a 95       	dec	r22
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_write+0xd0>
 278:	80 95       	com	r24
 27a:	82 23       	and	r24, r18
 27c:	82 bb       	out	0x12, r24	; 18
 27e:	08 95       	ret

00000280 <write_high_nibble>:
	}
}

void write_high_nibble(unsigned char portname,unsigned char value)
{
	value<<=4;
 280:	62 95       	swap	r22
 282:	60 7f       	andi	r22, 0xF0	; 240
	switch(portname)
 284:	82 34       	cpi	r24, 0x42	; 66
 286:	79 f0       	breq	.+30     	; 0x2a6 <write_high_nibble+0x26>
 288:	18 f4       	brcc	.+6      	; 0x290 <write_high_nibble+0x10>
 28a:	81 34       	cpi	r24, 0x41	; 65
 28c:	31 f0       	breq	.+12     	; 0x29a <write_high_nibble+0x1a>
 28e:	08 95       	ret
 290:	83 34       	cpi	r24, 0x43	; 67
 292:	79 f0       	breq	.+30     	; 0x2b2 <write_high_nibble+0x32>
 294:	84 34       	cpi	r24, 0x44	; 68
 296:	99 f0       	breq	.+38     	; 0x2be <write_high_nibble+0x3e>
 298:	08 95       	ret
	{
		case 'A':
		PORTA&=0x0f;
 29a:	8b b3       	in	r24, 0x1b	; 27
 29c:	8f 70       	andi	r24, 0x0F	; 15
 29e:	8b bb       	out	0x1b, r24	; 27
		PORTA|=value;
 2a0:	8b b3       	in	r24, 0x1b	; 27
 2a2:	86 2b       	or	r24, r22
 2a4:	8b bb       	out	0x1b, r24	; 27
		case 'B':
		PORTB&=0x0f;
 2a6:	88 b3       	in	r24, 0x18	; 24
 2a8:	8f 70       	andi	r24, 0x0F	; 15
 2aa:	88 bb       	out	0x18, r24	; 24
		PORTB|=value;
 2ac:	88 b3       	in	r24, 0x18	; 24
 2ae:	86 2b       	or	r24, r22
 2b0:	88 bb       	out	0x18, r24	; 24
		case 'C':
		PORTC&=0x0f;
 2b2:	85 b3       	in	r24, 0x15	; 21
 2b4:	8f 70       	andi	r24, 0x0F	; 15
 2b6:	85 bb       	out	0x15, r24	; 21
		PORTC|=value;
 2b8:	85 b3       	in	r24, 0x15	; 21
 2ba:	86 2b       	or	r24, r22
 2bc:	85 bb       	out	0x15, r24	; 21
		case 'D':
		PORTD&=0x0f;
 2be:	82 b3       	in	r24, 0x12	; 18
 2c0:	8f 70       	andi	r24, 0x0F	; 15
 2c2:	82 bb       	out	0x12, r24	; 18
		PORTD|=value;
 2c4:	82 b3       	in	r24, 0x12	; 18
 2c6:	68 2b       	or	r22, r24
 2c8:	62 bb       	out	0x12, r22	; 18
 2ca:	08 95       	ret

000002cc <send_falling_edge>:
}


static void send_falling_edge(void)
{
	DIO_write('C',EN,1);
 2cc:	41 e0       	ldi	r20, 0x01	; 1
 2ce:	62 e0       	ldi	r22, 0x02	; 2
 2d0:	83 e4       	ldi	r24, 0x43	; 67
 2d2:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <DIO_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d6:	8f e9       	ldi	r24, 0x9F	; 159
 2d8:	9f e0       	ldi	r25, 0x0F	; 15
 2da:	01 97       	sbiw	r24, 0x01	; 1
 2dc:	f1 f7       	brne	.-4      	; 0x2da <send_falling_edge+0xe>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <send_falling_edge+0x14>
 2e0:	00 00       	nop
	_delay_ms(2);
	DIO_write('C',EN,0);
 2e2:	40 e0       	ldi	r20, 0x00	; 0
 2e4:	62 e0       	ldi	r22, 0x02	; 2
 2e6:	83 e4       	ldi	r24, 0x43	; 67
 2e8:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <DIO_write>
 2ec:	8f e9       	ldi	r24, 0x9F	; 159
 2ee:	9f e0       	ldi	r25, 0x0F	; 15
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <send_falling_edge+0x24>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <send_falling_edge+0x2a>
 2f6:	00 00       	nop
 2f8:	08 95       	ret

000002fa <LCD_vSend_cmd>:
	_delay_ms(2);
}
void LCD_vSend_cmd(char cmd)
{
 2fa:	cf 93       	push	r28
 2fc:	c8 2f       	mov	r28, r24
	DIO_write_port('C',cmd);
	DIO_write('B',RS,0);
	send_falling_edge();
	
	#elif defined four_bits_mode
	write_high_nibble('C',cmd>>4);
 2fe:	68 2f       	mov	r22, r24
 300:	62 95       	swap	r22
 302:	6f 70       	andi	r22, 0x0F	; 15
 304:	83 e4       	ldi	r24, 0x43	; 67
 306:	0e 94 40 01 	call	0x280	; 0x280 <write_high_nibble>
	DIO_write('C',RS,0);
 30a:	40 e0       	ldi	r20, 0x00	; 0
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	83 e4       	ldi	r24, 0x43	; 67
 310:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <DIO_write>
	send_falling_edge();
 314:	0e 94 66 01 	call	0x2cc	; 0x2cc <send_falling_edge>
	write_high_nibble('C',cmd);
 318:	6c 2f       	mov	r22, r28
 31a:	83 e4       	ldi	r24, 0x43	; 67
 31c:	0e 94 40 01 	call	0x280	; 0x280 <write_high_nibble>
	DIO_write('C',RS,0);
 320:	40 e0       	ldi	r20, 0x00	; 0
 322:	60 e0       	ldi	r22, 0x00	; 0
 324:	83 e4       	ldi	r24, 0x43	; 67
 326:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <DIO_write>
	send_falling_edge();
 32a:	0e 94 66 01 	call	0x2cc	; 0x2cc <send_falling_edge>
 32e:	8f ec       	ldi	r24, 0xCF	; 207
 330:	97 e0       	ldi	r25, 0x07	; 7
 332:	01 97       	sbiw	r24, 0x01	; 1
 334:	f1 f7       	brne	.-4      	; 0x332 <LCD_vSend_cmd+0x38>
 336:	00 c0       	rjmp	.+0      	; 0x338 <LCD_vSend_cmd+0x3e>
 338:	00 00       	nop
	#endif
	_delay_ms(1);
}
 33a:	cf 91       	pop	r28
 33c:	08 95       	ret

0000033e <LCD_vInit>:
 33e:	2f ef       	ldi	r18, 0xFF	; 255
 340:	81 ee       	ldi	r24, 0xE1	; 225
 342:	94 e0       	ldi	r25, 0x04	; 4
 344:	21 50       	subi	r18, 0x01	; 1
 346:	80 40       	sbci	r24, 0x00	; 0
 348:	90 40       	sbci	r25, 0x00	; 0
 34a:	e1 f7       	brne	.-8      	; 0x344 <LCD_vInit+0x6>
 34c:	00 c0       	rjmp	.+0      	; 0x34e <LCD_vInit+0x10>
 34e:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
	_delay_ms(1); 
	
	#elif defined four_bits_mode
	DIO_vsetPINDir('C',4,1);
 350:	41 e0       	ldi	r20, 0x01	; 1
 352:	64 e0       	ldi	r22, 0x04	; 4
 354:	83 e4       	ldi	r24, 0x43	; 67
 356:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vsetPINDir>
	DIO_vsetPINDir('C',5,1);
 35a:	41 e0       	ldi	r20, 0x01	; 1
 35c:	65 e0       	ldi	r22, 0x05	; 5
 35e:	83 e4       	ldi	r24, 0x43	; 67
 360:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vsetPINDir>
	DIO_vsetPINDir('C',6,1);
 364:	41 e0       	ldi	r20, 0x01	; 1
 366:	66 e0       	ldi	r22, 0x06	; 6
 368:	83 e4       	ldi	r24, 0x43	; 67
 36a:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vsetPINDir>
	DIO_vsetPINDir('C',7,1);
 36e:	41 e0       	ldi	r20, 0x01	; 1
 370:	67 e0       	ldi	r22, 0x07	; 7
 372:	83 e4       	ldi	r24, 0x43	; 67
 374:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vsetPINDir>
	DIO_vsetPINDir('C',EN,1);
 378:	41 e0       	ldi	r20, 0x01	; 1
 37a:	62 e0       	ldi	r22, 0x02	; 2
 37c:	83 e4       	ldi	r24, 0x43	; 67
 37e:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vsetPINDir>
	DIO_vsetPINDir('C',RW,1);
 382:	41 e0       	ldi	r20, 0x01	; 1
 384:	61 e0       	ldi	r22, 0x01	; 1
 386:	83 e4       	ldi	r24, 0x43	; 67
 388:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vsetPINDir>
	DIO_vsetPINDir('C',RS,1);
 38c:	41 e0       	ldi	r20, 0x01	; 1
 38e:	60 e0       	ldi	r22, 0x00	; 0
 390:	83 e4       	ldi	r24, 0x43	; 67
 392:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vsetPINDir>
   	DIO_write('C',RW,0);
 396:	40 e0       	ldi	r20, 0x00	; 0
 398:	61 e0       	ldi	r22, 0x01	; 1
 39a:	83 e4       	ldi	r24, 0x43	; 67
 39c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <DIO_write>
	LCD_vSend_cmd(RETURN_HOME); //return home
 3a0:	82 e0       	ldi	r24, 0x02	; 2
 3a2:	0e 94 7d 01 	call	0x2fa	; 0x2fa <LCD_vSend_cmd>
 3a6:	8f e1       	ldi	r24, 0x1F	; 31
 3a8:	9e e4       	ldi	r25, 0x4E	; 78
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	f1 f7       	brne	.-4      	; 0x3aa <LCD_vInit+0x6c>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <LCD_vInit+0x72>
 3b0:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(FOUR_BITS); //4bit mode
 3b2:	88 e2       	ldi	r24, 0x28	; 40
 3b4:	0e 94 7d 01 	call	0x2fa	; 0x2fa <LCD_vSend_cmd>
 3b8:	8f ec       	ldi	r24, 0xCF	; 207
 3ba:	97 e0       	ldi	r25, 0x07	; 7
 3bc:	01 97       	sbiw	r24, 0x01	; 1
 3be:	f1 f7       	brne	.-4      	; 0x3bc <LCD_vInit+0x7e>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <LCD_vInit+0x84>
 3c2:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CURSOR_ON_DISPLAN_ON);//display on cursor on
 3c4:	8c e0       	ldi	r24, 0x0C	; 12
 3c6:	0e 94 7d 01 	call	0x2fa	; 0x2fa <LCD_vSend_cmd>
 3ca:	8f ec       	ldi	r24, 0xCF	; 207
 3cc:	97 e0       	ldi	r25, 0x07	; 7
 3ce:	01 97       	sbiw	r24, 0x01	; 1
 3d0:	f1 f7       	brne	.-4      	; 0x3ce <LCD_vInit+0x90>
 3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <LCD_vInit+0x96>
 3d4:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CLR_SCREEN);//clear the screen
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	0e 94 7d 01 	call	0x2fa	; 0x2fa <LCD_vSend_cmd>
 3dc:	8f e1       	ldi	r24, 0x1F	; 31
 3de:	9e e4       	ldi	r25, 0x4E	; 78
 3e0:	01 97       	sbiw	r24, 0x01	; 1
 3e2:	f1 f7       	brne	.-4      	; 0x3e0 <LCD_vInit+0xa2>
 3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <LCD_vInit+0xa8>
 3e6:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
 3e8:	86 e0       	ldi	r24, 0x06	; 6
 3ea:	0e 94 7d 01 	call	0x2fa	; 0x2fa <LCD_vSend_cmd>
 3ee:	8f ec       	ldi	r24, 0xCF	; 207
 3f0:	97 e0       	ldi	r25, 0x07	; 7
 3f2:	01 97       	sbiw	r24, 0x01	; 1
 3f4:	f1 f7       	brne	.-4      	; 0x3f2 <LCD_vInit+0xb4>
 3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <LCD_vInit+0xba>
 3f8:	00 00       	nop
 3fa:	08 95       	ret

000003fc <LCD_vSend_char>:
	#endif
	_delay_ms(1);
}

void LCD_vSend_char(char data)
{
 3fc:	cf 93       	push	r28
 3fe:	c8 2f       	mov	r28, r24
	DIO_write_port('C',data);
	DIO_write('B',RS,1);
	send_falling_edge();
	
	#elif defined four_bits_mode
	write_high_nibble('C',data>>4);
 400:	68 2f       	mov	r22, r24
 402:	62 95       	swap	r22
 404:	6f 70       	andi	r22, 0x0F	; 15
 406:	83 e4       	ldi	r24, 0x43	; 67
 408:	0e 94 40 01 	call	0x280	; 0x280 <write_high_nibble>
	DIO_write('C',RS,1);
 40c:	41 e0       	ldi	r20, 0x01	; 1
 40e:	60 e0       	ldi	r22, 0x00	; 0
 410:	83 e4       	ldi	r24, 0x43	; 67
 412:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <DIO_write>
	send_falling_edge();
 416:	0e 94 66 01 	call	0x2cc	; 0x2cc <send_falling_edge>
	write_high_nibble('C',data);
 41a:	6c 2f       	mov	r22, r28
 41c:	83 e4       	ldi	r24, 0x43	; 67
 41e:	0e 94 40 01 	call	0x280	; 0x280 <write_high_nibble>
	DIO_write('C',RS,1);
 422:	41 e0       	ldi	r20, 0x01	; 1
 424:	60 e0       	ldi	r22, 0x00	; 0
 426:	83 e4       	ldi	r24, 0x43	; 67
 428:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <DIO_write>
	send_falling_edge();
 42c:	0e 94 66 01 	call	0x2cc	; 0x2cc <send_falling_edge>
 430:	8f ec       	ldi	r24, 0xCF	; 207
 432:	97 e0       	ldi	r25, 0x07	; 7
 434:	01 97       	sbiw	r24, 0x01	; 1
 436:	f1 f7       	brne	.-4      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 438:	00 c0       	rjmp	.+0      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 43a:	00 00       	nop
	#endif
	_delay_ms(1);
}
 43c:	cf 91       	pop	r28
 43e:	08 95       	ret

00000440 <LCD_vSend_string>:


void LCD_vSend_string(char *data)
{
 440:	cf 93       	push	r28
 442:	df 93       	push	r29
 444:	ec 01       	movw	r28, r24
	while((*data)!='\0')
 446:	03 c0       	rjmp	.+6      	; 0x44e <LCD_vSend_string+0xe>
	{
		LCD_vSend_char(*data);
 448:	0e 94 fe 01 	call	0x3fc	; 0x3fc <LCD_vSend_char>
		data++;
 44c:	21 96       	adiw	r28, 0x01	; 1
}


void LCD_vSend_string(char *data)
{
	while((*data)!='\0')
 44e:	88 81       	ld	r24, Y
 450:	81 11       	cpse	r24, r1
 452:	fa cf       	rjmp	.-12     	; 0x448 <LCD_vSend_string+0x8>
	{
		LCD_vSend_char(*data);
		data++;
	}
}
 454:	df 91       	pop	r29
 456:	cf 91       	pop	r28
 458:	08 95       	ret

0000045a <main>:


int main(void)
{
    /* Replace with your application code */
    ADC_init();
 45a:	0e 94 41 00 	call	0x82	; 0x82 <ADC_init>
	LCD_vInit();
 45e:	0e 94 9f 01 	call	0x33e	; 0x33e <LCD_vInit>
	uint16_t v ;
	while (1) 
    {
		v = ADC_u16Read();
 462:	0e 94 51 00 	call	0xa2	; 0xa2 <ADC_u16Read>
			LCD_vSend_char(((v/10)%10)+'0');	
			LCD_vSend_char((v%10)+'0');
			
		}*/
		//LCD_vSend_char(v+'0');
		switch(v){
 466:	83 37       	cpi	r24, 0x73	; 115
 468:	21 e0       	ldi	r18, 0x01	; 1
 46a:	92 07       	cpc	r25, r18
 46c:	09 f4       	brne	.+2      	; 0x470 <main+0x16>
 46e:	5e c0       	rjmp	.+188    	; 0x52c <main+0xd2>
 470:	00 f5       	brcc	.+64     	; 0x4b2 <main+0x58>
 472:	8c 3c       	cpi	r24, 0xCC	; 204
 474:	91 05       	cpc	r25, r1
 476:	09 f4       	brne	.+2      	; 0x47a <main+0x20>
 478:	45 c0       	rjmp	.+138    	; 0x504 <main+0xaa>
 47a:	60 f4       	brcc	.+24     	; 0x494 <main+0x3a>
 47c:	8f 34       	cpi	r24, 0x4F	; 79
 47e:	91 05       	cpc	r25, r1
 480:	09 f4       	brne	.+2      	; 0x484 <main+0x2a>
 482:	4a c0       	rjmp	.+148    	; 0x518 <main+0xbe>
 484:	82 39       	cpi	r24, 0x92	; 146
 486:	91 05       	cpc	r25, r1
 488:	09 f4       	brne	.+2      	; 0x48c <main+0x32>
 48a:	41 c0       	rjmp	.+130    	; 0x50e <main+0xb4>
 48c:	89 2b       	or	r24, r25
 48e:	09 f0       	breq	.+2      	; 0x492 <main+0x38>
 490:	88 c0       	rjmp	.+272    	; 0x5a2 <main+0x148>
 492:	47 c0       	rjmp	.+142    	; 0x522 <main+0xc8>
 494:	86 32       	cpi	r24, 0x26	; 38
 496:	21 e0       	ldi	r18, 0x01	; 1
 498:	92 07       	cpc	r25, r18
 49a:	09 f4       	brne	.+2      	; 0x49e <main+0x44>
 49c:	51 c0       	rjmp	.+162    	; 0x540 <main+0xe6>
 49e:	8f 34       	cpi	r24, 0x4F	; 79
 4a0:	21 e0       	ldi	r18, 0x01	; 1
 4a2:	92 07       	cpc	r25, r18
 4a4:	09 f4       	brne	.+2      	; 0x4a8 <main+0x4e>
 4a6:	47 c0       	rjmp	.+142    	; 0x536 <main+0xdc>
 4a8:	88 3f       	cpi	r24, 0xF8	; 248
 4aa:	91 05       	cpc	r25, r1
 4ac:	09 f0       	breq	.+2      	; 0x4b0 <main+0x56>
 4ae:	79 c0       	rjmp	.+242    	; 0x5a2 <main+0x148>
 4b0:	4c c0       	rjmp	.+152    	; 0x54a <main+0xf0>
 4b2:	81 3e       	cpi	r24, 0xE1	; 225
 4b4:	21 e0       	ldi	r18, 0x01	; 1
 4b6:	92 07       	cpc	r25, r18
 4b8:	09 f4       	brne	.+2      	; 0x4bc <main+0x62>
 4ba:	5b c0       	rjmp	.+182    	; 0x572 <main+0x118>
 4bc:	78 f4       	brcc	.+30     	; 0x4dc <main+0x82>
 4be:	8d 3a       	cpi	r24, 0xAD	; 173
 4c0:	21 e0       	ldi	r18, 0x01	; 1
 4c2:	92 07       	cpc	r25, r18
 4c4:	09 f4       	brne	.+2      	; 0x4c8 <main+0x6e>
 4c6:	4b c0       	rjmp	.+150    	; 0x55e <main+0x104>
 4c8:	88 3c       	cpi	r24, 0xC8	; 200
 4ca:	21 e0       	ldi	r18, 0x01	; 1
 4cc:	92 07       	cpc	r25, r18
 4ce:	09 f4       	brne	.+2      	; 0x4d2 <main+0x78>
 4d0:	4b c0       	rjmp	.+150    	; 0x568 <main+0x10e>
 4d2:	8f 38       	cpi	r24, 0x8F	; 143
 4d4:	91 40       	sbci	r25, 0x01	; 1
 4d6:	09 f0       	breq	.+2      	; 0x4da <main+0x80>
 4d8:	64 c0       	rjmp	.+200    	; 0x5a2 <main+0x148>
 4da:	3c c0       	rjmp	.+120    	; 0x554 <main+0xfa>
 4dc:	8a 30       	cpi	r24, 0x0A	; 10
 4de:	22 e0       	ldi	r18, 0x02	; 2
 4e0:	92 07       	cpc	r25, r18
 4e2:	09 f4       	brne	.+2      	; 0x4e6 <main+0x8c>
 4e4:	55 c0       	rjmp	.+170    	; 0x590 <main+0x136>
 4e6:	28 f4       	brcc	.+10     	; 0x4f2 <main+0x98>
 4e8:	85 3f       	cpi	r24, 0xF5	; 245
 4ea:	91 40       	sbci	r25, 0x01	; 1
 4ec:	09 f4       	brne	.+2      	; 0x4f0 <main+0x96>
 4ee:	55 c0       	rjmp	.+170    	; 0x59a <main+0x140>
 4f0:	58 c0       	rjmp	.+176    	; 0x5a2 <main+0x148>
 4f2:	8e 31       	cpi	r24, 0x1E	; 30
 4f4:	22 e0       	ldi	r18, 0x02	; 2
 4f6:	92 07       	cpc	r25, r18
 4f8:	09 f4       	brne	.+2      	; 0x4fc <main+0xa2>
 4fa:	45 c0       	rjmp	.+138    	; 0x586 <main+0x12c>
 4fc:	80 33       	cpi	r24, 0x30	; 48
 4fe:	92 40       	sbci	r25, 0x02	; 2
 500:	e9 f1       	breq	.+122    	; 0x57c <main+0x122>
 502:	4f c0       	rjmp	.+158    	; 0x5a2 <main+0x148>
			case 48 : 
				//LCD_vSend_string("48");
				break;
			case 204:
				LCD_vSend_string("ON");
 504:	80 e6       	ldi	r24, 0x60	; 96
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
				break;
 50c:	4a c0       	rjmp	.+148    	; 0x5a2 <main+0x148>
				
			case 146 : 
				LCD_vSend_string("0");
 50e:	83 e6       	ldi	r24, 0x63	; 99
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
				break;
 516:	45 c0       	rjmp	.+138    	; 0x5a2 <main+0x148>
			case 79 : 
				LCD_vSend_string("=");
 518:	85 e6       	ldi	r24, 0x65	; 101
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
				break;
 520:	40 c0       	rjmp	.+128    	; 0x5a2 <main+0x148>
			case 0:
				LCD_vSend_string("+");
 522:	87 e6       	ldi	r24, 0x67	; 103
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
				break;
 52a:	3b c0       	rjmp	.+118    	; 0x5a2 <main+0x148>
			case 371:
				LCD_vSend_string("1");
 52c:	89 e6       	ldi	r24, 0x69	; 105
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
				break;
 534:	36 c0       	rjmp	.+108    	; 0x5a2 <main+0x148>
			case 335:
			LCD_vSend_string("2");
 536:	8b e6       	ldi	r24, 0x6B	; 107
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 53e:	31 c0       	rjmp	.+98     	; 0x5a2 <main+0x148>
			
			case 294 :
			LCD_vSend_string("3");
 540:	8d e6       	ldi	r24, 0x6D	; 109
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 548:	2c c0       	rjmp	.+88     	; 0x5a2 <main+0x148>
			case 248 :
			LCD_vSend_string("-");
 54a:	8f e6       	ldi	r24, 0x6F	; 111
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 552:	27 c0       	rjmp	.+78     	; 0x5a2 <main+0x148>
			case 399:
			LCD_vSend_string("*");
 554:	81 e7       	ldi	r24, 0x71	; 113
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 55c:	22 c0       	rjmp	.+68     	; 0x5a2 <main+0x148>
			case 429:
			LCD_vSend_string("6");
 55e:	83 e7       	ldi	r24, 0x73	; 115
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 566:	1d c0       	rjmp	.+58     	; 0x5a2 <main+0x148>
			case 456:
			LCD_vSend_string("5");
 568:	85 e7       	ldi	r24, 0x75	; 117
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 570:	18 c0       	rjmp	.+48     	; 0x5a2 <main+0x148>
			
			case 481 :
			LCD_vSend_string("4");
 572:	87 e7       	ldi	r24, 0x77	; 119
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 57a:	13 c0       	rjmp	.+38     	; 0x5a2 <main+0x148>
			case 560 :
			LCD_vSend_string("7");
 57c:	89 e7       	ldi	r24, 0x79	; 121
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 584:	0e c0       	rjmp	.+28     	; 0x5a2 <main+0x148>
			case 542:
			LCD_vSend_string("8");
 586:	8b e7       	ldi	r24, 0x7B	; 123
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 58e:	09 c0       	rjmp	.+18     	; 0x5a2 <main+0x148>
			case 522:
			LCD_vSend_string("9");
 590:	8d e7       	ldi	r24, 0x7D	; 125
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
			break;
 598:	04 c0       	rjmp	.+8      	; 0x5a2 <main+0x148>
			case 501:
			LCD_vSend_string("/");
 59a:	8f e7       	ldi	r24, 0x7F	; 127
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	0e 94 20 02 	call	0x440	; 0x440 <LCD_vSend_string>
 5a2:	8f ef       	ldi	r24, 0xFF	; 255
 5a4:	91 ee       	ldi	r25, 0xE1	; 225
 5a6:	24 e0       	ldi	r18, 0x04	; 4
 5a8:	81 50       	subi	r24, 0x01	; 1
 5aa:	90 40       	sbci	r25, 0x00	; 0
 5ac:	20 40       	sbci	r18, 0x00	; 0
 5ae:	e1 f7       	brne	.-8      	; 0x5a8 <main+0x14e>
 5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <main+0x158>
 5b2:	00 00       	nop
 5b4:	56 cf       	rjmp	.-340    	; 0x462 <main+0x8>

000005b6 <_exit>:
 5b6:	f8 94       	cli

000005b8 <__stop_program>:
 5b8:	ff cf       	rjmp	.-2      	; 0x5b8 <__stop_program>
