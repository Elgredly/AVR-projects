
LM35 Temperature Sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000980  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00000980  000009f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000a06  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a38  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  00000a74  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001292  00000000  00000000  00000b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000836  00000000  00000000  00001e06  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a1d  00000000  00000000  0000263c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001ac  00000000  00000000  0000305c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f1  00000000  00000000  00003208  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a98  00000000  00000000  000036f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00004191  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e8       	ldi	r30, 0x80	; 128
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 51 02 	call	0x4a2	; 0x4a2 <main>
  7a:	0c 94 be 04 	jmp	0x97c	; 0x97c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <ADC_init>:
	   1		  0			*Not implemented*
	   1		  1			Volt = 2.56v
	 
	 */
	 
	 SET_BIT(ADMUX,REFS0); //ADC voltage = AVCC
  82:	87 b1       	in	r24, 0x07	; 7
  84:	80 64       	ori	r24, 0x40	; 64
  86:	87 b9       	out	0x07, r24	; 7
	 SET_BIT(ADMUX,REFS1); //Both of REFS1 & REFS0 if Activated it will take 2.56V
  88:	87 b1       	in	r24, 0x07	; 7
  8a:	80 68       	ori	r24, 0x80	; 128
  8c:	87 b9       	out	0x07, r24	; 7
	 SET_BIT(ADMUX,MUX4); // 2 pins ADC
  8e:	87 b1       	in	r24, 0x07	; 7
  90:	80 61       	ori	r24, 0x10	; 16
  92:	87 b9       	out	0x07, r24	; 7
/*	 SET_BIT(ADMUX,MUX0); //set PA1 to be ADC pin*/
	 SET_BIT(ADCSRA,ADEN); //enable ADC
  94:	86 b1       	in	r24, 0x06	; 6
  96:	80 68       	ori	r24, 0x80	; 128
  98:	86 b9       	out	0x06, r24	; 6
	 
	 // set ADC clock (MCU_cloc/64k)
	 SET_BIT(ADCSRA,ADPS2);
  9a:	86 b1       	in	r24, 0x06	; 6
  9c:	84 60       	ori	r24, 0x04	; 4
  9e:	86 b9       	out	0x06, r24	; 6
	 SET_BIT(ADCSRA,ADPS1);
  a0:	86 b1       	in	r24, 0x06	; 6
  a2:	82 60       	ori	r24, 0x02	; 2
  a4:	86 b9       	out	0x06, r24	; 6
  a6:	08 95       	ret

000000a8 <ADC_u16Read>:

unsigned short ADC_u16Read()
{
	unsigned short read_val;
	
	SET_BIT(ADCSRA,ADSC);  //set Start Conversion bit
  a8:	86 b1       	in	r24, 0x06	; 6
  aa:	80 64       	ori	r24, 0x40	; 64
  ac:	86 b9       	out	0x06, r24	; 6
	while(READ_BIT(ADCSRA,ADSC)==1); //wait until flag become 1
  ae:	36 99       	sbic	0x06, 6	; 6
  b0:	fe cf       	rjmp	.-4      	; 0xae <ADC_u16Read+0x6>
	SET_BIT(ADCSRA,ADIF); //clear ADIF
  b2:	86 b1       	in	r24, 0x06	; 6
  b4:	80 61       	ori	r24, 0x10	; 16
  b6:	86 b9       	out	0x06, r24	; 6
	read_val = (ADCL); 
  b8:	24 b1       	in	r18, 0x04	; 4
	read_val |= (ADCH<<8); //read ADC high &low 
  ba:	85 b1       	in	r24, 0x05	; 5
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	98 2f       	mov	r25, r24
  c0:	88 27       	eor	r24, r24
	return read_val;
}
  c2:	82 2b       	or	r24, r18
  c4:	08 95       	ret

000000c6 <DIO_vsetPINDir>:
		case 'C':
		PORTC&=0xf0;
		PORTC|=value;
		case 'D':
		PORTD&=0xf0;
		PORTD|=value;
  c6:	82 34       	cpi	r24, 0x42	; 66
  c8:	19 f1       	breq	.+70     	; 0x110 <DIO_vsetPINDir+0x4a>
  ca:	18 f4       	brcc	.+6      	; 0xd2 <DIO_vsetPINDir+0xc>
  cc:	81 34       	cpi	r24, 0x41	; 65
  ce:	39 f0       	breq	.+14     	; 0xde <DIO_vsetPINDir+0x18>
  d0:	08 95       	ret
  d2:	83 34       	cpi	r24, 0x43	; 67
  d4:	b1 f1       	breq	.+108    	; 0x142 <DIO_vsetPINDir+0x7c>
  d6:	84 34       	cpi	r24, 0x44	; 68
  d8:	09 f4       	brne	.+2      	; 0xdc <DIO_vsetPINDir+0x16>
  da:	4c c0       	rjmp	.+152    	; 0x174 <DIO_vsetPINDir+0xae>
  dc:	08 95       	ret
  de:	41 30       	cpi	r20, 0x01	; 1
  e0:	59 f4       	brne	.+22     	; 0xf8 <DIO_vsetPINDir+0x32>
  e2:	2a b3       	in	r18, 0x1a	; 26
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	02 c0       	rjmp	.+4      	; 0xee <DIO_vsetPINDir+0x28>
  ea:	88 0f       	add	r24, r24
  ec:	99 1f       	adc	r25, r25
  ee:	6a 95       	dec	r22
  f0:	e2 f7       	brpl	.-8      	; 0xea <DIO_vsetPINDir+0x24>
  f2:	82 2b       	or	r24, r18
  f4:	8a bb       	out	0x1a, r24	; 26
  f6:	08 95       	ret
  f8:	2a b3       	in	r18, 0x1a	; 26
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_vsetPINDir+0x3e>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_vsetPINDir+0x3a>
 108:	80 95       	com	r24
 10a:	82 23       	and	r24, r18
 10c:	8a bb       	out	0x1a, r24	; 26
 10e:	08 95       	ret
 110:	41 30       	cpi	r20, 0x01	; 1
 112:	59 f4       	brne	.+22     	; 0x12a <DIO_vsetPINDir+0x64>
 114:	27 b3       	in	r18, 0x17	; 23
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_vsetPINDir+0x5a>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_vsetPINDir+0x56>
 124:	82 2b       	or	r24, r18
 126:	87 bb       	out	0x17, r24	; 23
 128:	08 95       	ret
 12a:	27 b3       	in	r18, 0x17	; 23
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_vsetPINDir+0x70>
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	6a 95       	dec	r22
 138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_vsetPINDir+0x6c>
 13a:	80 95       	com	r24
 13c:	82 23       	and	r24, r18
 13e:	87 bb       	out	0x17, r24	; 23
 140:	08 95       	ret
 142:	41 30       	cpi	r20, 0x01	; 1
 144:	59 f4       	brne	.+22     	; 0x15c <DIO_vsetPINDir+0x96>
 146:	24 b3       	in	r18, 0x14	; 20
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_vsetPINDir+0x8c>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_vsetPINDir+0x88>
 156:	82 2b       	or	r24, r18
 158:	84 bb       	out	0x14, r24	; 20
 15a:	08 95       	ret
 15c:	24 b3       	in	r18, 0x14	; 20
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	02 c0       	rjmp	.+4      	; 0x168 <DIO_vsetPINDir+0xa2>
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	6a 95       	dec	r22
 16a:	e2 f7       	brpl	.-8      	; 0x164 <DIO_vsetPINDir+0x9e>
 16c:	80 95       	com	r24
 16e:	82 23       	and	r24, r18
 170:	84 bb       	out	0x14, r24	; 20
 172:	08 95       	ret
 174:	41 30       	cpi	r20, 0x01	; 1
 176:	59 f4       	brne	.+22     	; 0x18e <DIO_vsetPINDir+0xc8>
 178:	21 b3       	in	r18, 0x11	; 17
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_vsetPINDir+0xbe>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_vsetPINDir+0xba>
 188:	82 2b       	or	r24, r18
 18a:	81 bb       	out	0x11, r24	; 17
 18c:	08 95       	ret
 18e:	21 b3       	in	r18, 0x11	; 17
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_vsetPINDir+0xd4>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_vsetPINDir+0xd0>
 19e:	80 95       	com	r24
 1a0:	82 23       	and	r24, r18
 1a2:	81 bb       	out	0x11, r24	; 17
 1a4:	08 95       	ret

000001a6 <DIO_write>:
 1a6:	82 34       	cpi	r24, 0x42	; 66
 1a8:	19 f1       	breq	.+70     	; 0x1f0 <DIO_write+0x4a>
 1aa:	18 f4       	brcc	.+6      	; 0x1b2 <DIO_write+0xc>
 1ac:	81 34       	cpi	r24, 0x41	; 65
 1ae:	39 f0       	breq	.+14     	; 0x1be <DIO_write+0x18>
 1b0:	08 95       	ret
 1b2:	83 34       	cpi	r24, 0x43	; 67
 1b4:	b1 f1       	breq	.+108    	; 0x222 <DIO_write+0x7c>
 1b6:	84 34       	cpi	r24, 0x44	; 68
 1b8:	09 f4       	brne	.+2      	; 0x1bc <DIO_write+0x16>
 1ba:	4c c0       	rjmp	.+152    	; 0x254 <DIO_write+0xae>
 1bc:	08 95       	ret
 1be:	41 30       	cpi	r20, 0x01	; 1
 1c0:	59 f4       	brne	.+22     	; 0x1d8 <DIO_write+0x32>
 1c2:	2b b3       	in	r18, 0x1b	; 27
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_write+0x28>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	6a 95       	dec	r22
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_write+0x24>
 1d2:	82 2b       	or	r24, r18
 1d4:	8b bb       	out	0x1b, r24	; 27
 1d6:	08 95       	ret
 1d8:	2b b3       	in	r18, 0x1b	; 27
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <DIO_write+0x3e>
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	6a 95       	dec	r22
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <DIO_write+0x3a>
 1e8:	80 95       	com	r24
 1ea:	82 23       	and	r24, r18
 1ec:	8b bb       	out	0x1b, r24	; 27
 1ee:	08 95       	ret
 1f0:	41 30       	cpi	r20, 0x01	; 1
 1f2:	59 f4       	brne	.+22     	; 0x20a <DIO_write+0x64>
 1f4:	28 b3       	in	r18, 0x18	; 24
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_write+0x5a>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	6a 95       	dec	r22
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_write+0x56>
 204:	82 2b       	or	r24, r18
 206:	88 bb       	out	0x18, r24	; 24
 208:	08 95       	ret
 20a:	28 b3       	in	r18, 0x18	; 24
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_write+0x70>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	6a 95       	dec	r22
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_write+0x6c>
 21a:	80 95       	com	r24
 21c:	82 23       	and	r24, r18
 21e:	88 bb       	out	0x18, r24	; 24
 220:	08 95       	ret
 222:	41 30       	cpi	r20, 0x01	; 1
 224:	59 f4       	brne	.+22     	; 0x23c <DIO_write+0x96>
 226:	25 b3       	in	r18, 0x15	; 21
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	02 c0       	rjmp	.+4      	; 0x232 <DIO_write+0x8c>
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	6a 95       	dec	r22
 234:	e2 f7       	brpl	.-8      	; 0x22e <DIO_write+0x88>
 236:	82 2b       	or	r24, r18
 238:	85 bb       	out	0x15, r24	; 21
 23a:	08 95       	ret
 23c:	25 b3       	in	r18, 0x15	; 21
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	02 c0       	rjmp	.+4      	; 0x248 <DIO_write+0xa2>
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	6a 95       	dec	r22
 24a:	e2 f7       	brpl	.-8      	; 0x244 <DIO_write+0x9e>
 24c:	80 95       	com	r24
 24e:	82 23       	and	r24, r18
 250:	85 bb       	out	0x15, r24	; 21
 252:	08 95       	ret
 254:	41 30       	cpi	r20, 0x01	; 1
 256:	59 f4       	brne	.+22     	; 0x26e <DIO_write+0xc8>
 258:	22 b3       	in	r18, 0x12	; 18
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 c0       	rjmp	.+4      	; 0x264 <DIO_write+0xbe>
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	6a 95       	dec	r22
 266:	e2 f7       	brpl	.-8      	; 0x260 <DIO_write+0xba>
 268:	82 2b       	or	r24, r18
 26a:	82 bb       	out	0x12, r24	; 18
 26c:	08 95       	ret
 26e:	22 b3       	in	r18, 0x12	; 18
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_write+0xd4>
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	6a 95       	dec	r22
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_write+0xd0>
 27e:	80 95       	com	r24
 280:	82 23       	and	r24, r18
 282:	82 bb       	out	0x12, r24	; 18
 284:	08 95       	ret

00000286 <write_high_nibble>:
	}
}

void write_high_nibble(unsigned char portname,unsigned char value)
{
	value<<=4;
 286:	62 95       	swap	r22
 288:	60 7f       	andi	r22, 0xF0	; 240
	switch(portname)
 28a:	82 34       	cpi	r24, 0x42	; 66
 28c:	79 f0       	breq	.+30     	; 0x2ac <write_high_nibble+0x26>
 28e:	18 f4       	brcc	.+6      	; 0x296 <write_high_nibble+0x10>
 290:	81 34       	cpi	r24, 0x41	; 65
 292:	31 f0       	breq	.+12     	; 0x2a0 <write_high_nibble+0x1a>
 294:	08 95       	ret
 296:	83 34       	cpi	r24, 0x43	; 67
 298:	79 f0       	breq	.+30     	; 0x2b8 <write_high_nibble+0x32>
 29a:	84 34       	cpi	r24, 0x44	; 68
 29c:	99 f0       	breq	.+38     	; 0x2c4 <write_high_nibble+0x3e>
 29e:	08 95       	ret
	{
		case 'A':
		PORTA&=0x0f;
 2a0:	8b b3       	in	r24, 0x1b	; 27
 2a2:	8f 70       	andi	r24, 0x0F	; 15
 2a4:	8b bb       	out	0x1b, r24	; 27
		PORTA|=value;
 2a6:	8b b3       	in	r24, 0x1b	; 27
 2a8:	86 2b       	or	r24, r22
 2aa:	8b bb       	out	0x1b, r24	; 27
		case 'B':
		PORTB&=0x0f;
 2ac:	88 b3       	in	r24, 0x18	; 24
 2ae:	8f 70       	andi	r24, 0x0F	; 15
 2b0:	88 bb       	out	0x18, r24	; 24
		PORTB|=value;
 2b2:	88 b3       	in	r24, 0x18	; 24
 2b4:	86 2b       	or	r24, r22
 2b6:	88 bb       	out	0x18, r24	; 24
		case 'C':
		PORTC&=0x0f;
 2b8:	85 b3       	in	r24, 0x15	; 21
 2ba:	8f 70       	andi	r24, 0x0F	; 15
 2bc:	85 bb       	out	0x15, r24	; 21
		PORTC|=value;
 2be:	85 b3       	in	r24, 0x15	; 21
 2c0:	86 2b       	or	r24, r22
 2c2:	85 bb       	out	0x15, r24	; 21
		case 'D':
		PORTD&=0x0f;
 2c4:	82 b3       	in	r24, 0x12	; 18
 2c6:	8f 70       	andi	r24, 0x0F	; 15
 2c8:	82 bb       	out	0x12, r24	; 18
		PORTD|=value;
 2ca:	82 b3       	in	r24, 0x12	; 18
 2cc:	68 2b       	or	r22, r24
 2ce:	62 bb       	out	0x12, r22	; 18
 2d0:	08 95       	ret

000002d2 <send_falling_edge>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d2:	41 e0       	ldi	r20, 0x01	; 1
 2d4:	62 e0       	ldi	r22, 0x02	; 2
 2d6:	83 e4       	ldi	r24, 0x43	; 67
 2d8:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <DIO_write>
 2dc:	8f e9       	ldi	r24, 0x9F	; 159
 2de:	9f e0       	ldi	r25, 0x0F	; 15
 2e0:	01 97       	sbiw	r24, 0x01	; 1
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <send_falling_edge+0xe>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <send_falling_edge+0x14>
 2e6:	00 00       	nop
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	62 e0       	ldi	r22, 0x02	; 2
 2ec:	83 e4       	ldi	r24, 0x43	; 67
 2ee:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <DIO_write>
 2f2:	8f e9       	ldi	r24, 0x9F	; 159
 2f4:	9f e0       	ldi	r25, 0x0F	; 15
 2f6:	01 97       	sbiw	r24, 0x01	; 1
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <send_falling_edge+0x24>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <send_falling_edge+0x2a>
 2fc:	00 00       	nop
 2fe:	08 95       	ret

00000300 <LCD_vSend_cmd>:
 300:	cf 93       	push	r28
 302:	c8 2f       	mov	r28, r24
 304:	68 2f       	mov	r22, r24
 306:	62 95       	swap	r22
 308:	6f 70       	andi	r22, 0x0F	; 15
 30a:	83 e4       	ldi	r24, 0x43	; 67
 30c:	0e 94 43 01 	call	0x286	; 0x286 <write_high_nibble>
 310:	40 e0       	ldi	r20, 0x00	; 0
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	83 e4       	ldi	r24, 0x43	; 67
 316:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <DIO_write>
 31a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <send_falling_edge>
 31e:	6c 2f       	mov	r22, r28
 320:	83 e4       	ldi	r24, 0x43	; 67
 322:	0e 94 43 01 	call	0x286	; 0x286 <write_high_nibble>
 326:	40 e0       	ldi	r20, 0x00	; 0
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	83 e4       	ldi	r24, 0x43	; 67
 32c:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <DIO_write>
 330:	0e 94 69 01 	call	0x2d2	; 0x2d2 <send_falling_edge>
 334:	8f ec       	ldi	r24, 0xCF	; 207
 336:	97 e0       	ldi	r25, 0x07	; 7
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <LCD_vSend_cmd+0x38>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <LCD_vSend_cmd+0x3e>
 33e:	00 00       	nop
 340:	cf 91       	pop	r28
 342:	08 95       	ret

00000344 <LCD_vInit>:
 344:	2f ef       	ldi	r18, 0xFF	; 255
 346:	81 ee       	ldi	r24, 0xE1	; 225
 348:	94 e0       	ldi	r25, 0x04	; 4
 34a:	21 50       	subi	r18, 0x01	; 1
 34c:	80 40       	sbci	r24, 0x00	; 0
 34e:	90 40       	sbci	r25, 0x00	; 0
 350:	e1 f7       	brne	.-8      	; 0x34a <LCD_vInit+0x6>
 352:	00 c0       	rjmp	.+0      	; 0x354 <LCD_vInit+0x10>
 354:	00 00       	nop
 356:	41 e0       	ldi	r20, 0x01	; 1
 358:	64 e0       	ldi	r22, 0x04	; 4
 35a:	83 e4       	ldi	r24, 0x43	; 67
 35c:	0e 94 63 00 	call	0xc6	; 0xc6 <DIO_vsetPINDir>
 360:	41 e0       	ldi	r20, 0x01	; 1
 362:	65 e0       	ldi	r22, 0x05	; 5
 364:	83 e4       	ldi	r24, 0x43	; 67
 366:	0e 94 63 00 	call	0xc6	; 0xc6 <DIO_vsetPINDir>
 36a:	41 e0       	ldi	r20, 0x01	; 1
 36c:	66 e0       	ldi	r22, 0x06	; 6
 36e:	83 e4       	ldi	r24, 0x43	; 67
 370:	0e 94 63 00 	call	0xc6	; 0xc6 <DIO_vsetPINDir>
 374:	41 e0       	ldi	r20, 0x01	; 1
 376:	67 e0       	ldi	r22, 0x07	; 7
 378:	83 e4       	ldi	r24, 0x43	; 67
 37a:	0e 94 63 00 	call	0xc6	; 0xc6 <DIO_vsetPINDir>
 37e:	41 e0       	ldi	r20, 0x01	; 1
 380:	62 e0       	ldi	r22, 0x02	; 2
 382:	83 e4       	ldi	r24, 0x43	; 67
 384:	0e 94 63 00 	call	0xc6	; 0xc6 <DIO_vsetPINDir>
 388:	41 e0       	ldi	r20, 0x01	; 1
 38a:	61 e0       	ldi	r22, 0x01	; 1
 38c:	83 e4       	ldi	r24, 0x43	; 67
 38e:	0e 94 63 00 	call	0xc6	; 0xc6 <DIO_vsetPINDir>
 392:	41 e0       	ldi	r20, 0x01	; 1
 394:	60 e0       	ldi	r22, 0x00	; 0
 396:	83 e4       	ldi	r24, 0x43	; 67
 398:	0e 94 63 00 	call	0xc6	; 0xc6 <DIO_vsetPINDir>
 39c:	40 e0       	ldi	r20, 0x00	; 0
 39e:	61 e0       	ldi	r22, 0x01	; 1
 3a0:	83 e4       	ldi	r24, 0x43	; 67
 3a2:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <DIO_write>
 3a6:	82 e0       	ldi	r24, 0x02	; 2
 3a8:	0e 94 80 01 	call	0x300	; 0x300 <LCD_vSend_cmd>
 3ac:	8f e1       	ldi	r24, 0x1F	; 31
 3ae:	9e e4       	ldi	r25, 0x4E	; 78
 3b0:	01 97       	sbiw	r24, 0x01	; 1
 3b2:	f1 f7       	brne	.-4      	; 0x3b0 <LCD_vInit+0x6c>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <LCD_vInit+0x72>
 3b6:	00 00       	nop
 3b8:	88 e2       	ldi	r24, 0x28	; 40
 3ba:	0e 94 80 01 	call	0x300	; 0x300 <LCD_vSend_cmd>
 3be:	8f ec       	ldi	r24, 0xCF	; 207
 3c0:	97 e0       	ldi	r25, 0x07	; 7
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <LCD_vInit+0x7e>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <LCD_vInit+0x84>
 3c8:	00 00       	nop
 3ca:	8c e0       	ldi	r24, 0x0C	; 12
 3cc:	0e 94 80 01 	call	0x300	; 0x300 <LCD_vSend_cmd>
 3d0:	8f ec       	ldi	r24, 0xCF	; 207
 3d2:	97 e0       	ldi	r25, 0x07	; 7
 3d4:	01 97       	sbiw	r24, 0x01	; 1
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <LCD_vInit+0x90>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <LCD_vInit+0x96>
 3da:	00 00       	nop
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	0e 94 80 01 	call	0x300	; 0x300 <LCD_vSend_cmd>
 3e2:	8f e1       	ldi	r24, 0x1F	; 31
 3e4:	9e e4       	ldi	r25, 0x4E	; 78
 3e6:	01 97       	sbiw	r24, 0x01	; 1
 3e8:	f1 f7       	brne	.-4      	; 0x3e6 <LCD_vInit+0xa2>
 3ea:	00 c0       	rjmp	.+0      	; 0x3ec <LCD_vInit+0xa8>
 3ec:	00 00       	nop
 3ee:	86 e0       	ldi	r24, 0x06	; 6
 3f0:	0e 94 80 01 	call	0x300	; 0x300 <LCD_vSend_cmd>
 3f4:	8f ec       	ldi	r24, 0xCF	; 207
 3f6:	97 e0       	ldi	r25, 0x07	; 7
 3f8:	01 97       	sbiw	r24, 0x01	; 1
 3fa:	f1 f7       	brne	.-4      	; 0x3f8 <LCD_vInit+0xb4>
 3fc:	00 c0       	rjmp	.+0      	; 0x3fe <LCD_vInit+0xba>
 3fe:	00 00       	nop
 400:	08 95       	ret

00000402 <LCD_vSend_char>:
 402:	cf 93       	push	r28
 404:	c8 2f       	mov	r28, r24
 406:	68 2f       	mov	r22, r24
 408:	62 95       	swap	r22
 40a:	6f 70       	andi	r22, 0x0F	; 15
 40c:	83 e4       	ldi	r24, 0x43	; 67
 40e:	0e 94 43 01 	call	0x286	; 0x286 <write_high_nibble>
 412:	41 e0       	ldi	r20, 0x01	; 1
 414:	60 e0       	ldi	r22, 0x00	; 0
 416:	83 e4       	ldi	r24, 0x43	; 67
 418:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <DIO_write>
 41c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <send_falling_edge>
 420:	6c 2f       	mov	r22, r28
 422:	83 e4       	ldi	r24, 0x43	; 67
 424:	0e 94 43 01 	call	0x286	; 0x286 <write_high_nibble>
 428:	41 e0       	ldi	r20, 0x01	; 1
 42a:	60 e0       	ldi	r22, 0x00	; 0
 42c:	83 e4       	ldi	r24, 0x43	; 67
 42e:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <DIO_write>
 432:	0e 94 69 01 	call	0x2d2	; 0x2d2 <send_falling_edge>
 436:	8f ec       	ldi	r24, 0xCF	; 207
 438:	97 e0       	ldi	r25, 0x07	; 7
 43a:	01 97       	sbiw	r24, 0x01	; 1
 43c:	f1 f7       	brne	.-4      	; 0x43a <LCD_vSend_char+0x38>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <LCD_vSend_char+0x3e>
 440:	00 00       	nop
 442:	cf 91       	pop	r28
 444:	08 95       	ret

00000446 <LCD_vSend_string>:
 446:	cf 93       	push	r28
 448:	df 93       	push	r29
 44a:	ec 01       	movw	r28, r24
 44c:	03 c0       	rjmp	.+6      	; 0x454 <LCD_vSend_string+0xe>
 44e:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
 452:	21 96       	adiw	r28, 0x01	; 1
 454:	88 81       	ld	r24, Y
 456:	81 11       	cpse	r24, r1
 458:	fa cf       	rjmp	.-12     	; 0x44e <LCD_vSend_string+0x8>
 45a:	df 91       	pop	r29
 45c:	cf 91       	pop	r28
 45e:	08 95       	ret

00000460 <LCD_movecursor>:
	_delay_ms(10);
}
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
 460:	9f ef       	ldi	r25, 0xFF	; 255
 462:	98 0f       	add	r25, r24
 464:	92 30       	cpi	r25, 0x02	; 2
 466:	70 f4       	brcc	.+28     	; 0x484 <LCD_movecursor+0x24>
 468:	61 31       	cpi	r22, 0x11	; 17
 46a:	70 f4       	brcc	.+28     	; 0x488 <LCD_movecursor+0x28>
 46c:	66 23       	and	r22, r22
 46e:	71 f0       	breq	.+28     	; 0x48c <LCD_movecursor+0x2c>
	{
		data=0x80;
	}
	else if(row==1)
 470:	81 30       	cpi	r24, 0x01	; 1
 472:	19 f4       	brne	.+6      	; 0x47a <LCD_movecursor+0x1a>
	{
		data=0x80+coloumn-1 ;
 474:	2f e7       	ldi	r18, 0x7F	; 127
 476:	26 0f       	add	r18, r22
 478:	0a c0       	rjmp	.+20     	; 0x48e <LCD_movecursor+0x2e>
	}
	else if (row==2)
 47a:	82 30       	cpi	r24, 0x02	; 2
 47c:	41 f4       	brne	.+16     	; 0x48e <LCD_movecursor+0x2e>
	{
		data=0xc0+coloumn-1;
 47e:	2f eb       	ldi	r18, 0xBF	; 191
 480:	26 0f       	add	r18, r22
 482:	05 c0       	rjmp	.+10     	; 0x48e <LCD_movecursor+0x2e>
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
	{
		data=0x80;
 484:	20 e8       	ldi	r18, 0x80	; 128
 486:	03 c0       	rjmp	.+6      	; 0x48e <LCD_movecursor+0x2e>
 488:	20 e8       	ldi	r18, 0x80	; 128
 48a:	01 c0       	rjmp	.+2      	; 0x48e <LCD_movecursor+0x2e>
 48c:	20 e8       	ldi	r18, 0x80	; 128
	}
	else if (row==2)
	{
		data=0xc0+coloumn-1;
	}
	LCD_vSend_cmd(data);
 48e:	82 2f       	mov	r24, r18
 490:	0e 94 80 01 	call	0x300	; 0x300 <LCD_vSend_cmd>
 494:	8f ec       	ldi	r24, 0xCF	; 207
 496:	97 e0       	ldi	r25, 0x07	; 7
 498:	01 97       	sbiw	r24, 0x01	; 1
 49a:	f1 f7       	brne	.-4      	; 0x498 <LCD_movecursor+0x38>
 49c:	00 c0       	rjmp	.+0      	; 0x49e <LCD_movecursor+0x3e>
 49e:	00 00       	nop
 4a0:	08 95       	ret

000004a2 <main>:
#include "ADC.h"

int main(void)
{
    /* Replace with your application code */
    LCD_vInit();
 4a2:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_vInit>
	//LCD_vSend_string("TEST");
	ADC_init();	
 4a6:	0e 94 41 00 	call	0x82	; 0x82 <ADC_init>
	uint16_t temp;
	LCD_vSend_string("Temperature=   C");
 4aa:	80 e6       	ldi	r24, 0x60	; 96
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 23 02 	call	0x446	; 0x446 <LCD_vSend_string>
		
	while(1){
		temp = (ADC_u16Read()*2.5);
 4b2:	0e 94 54 00 	call	0xa8	; 0xa8 <ADC_u16Read>
 4b6:	bc 01       	movw	r22, r24
 4b8:	80 e0       	ldi	r24, 0x00	; 0
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	0e 94 b4 03 	call	0x768	; 0x768 <__floatunsisf>
 4c0:	20 e0       	ldi	r18, 0x00	; 0
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	40 e2       	ldi	r20, 0x20	; 32
 4c6:	50 e4       	ldi	r21, 0x40	; 64
 4c8:	0e 94 1a 04 	call	0x834	; 0x834 <__mulsf3>
 4cc:	0e 94 85 03 	call	0x70a	; 0x70a <__fixunssfsi>
 4d0:	6b 01       	movw	r12, r22
 4d2:	7c 01       	movw	r14, r24
		uint16_t t;
		LCD_movecursor(1,13);
 4d4:	6d e0       	ldi	r22, 0x0D	; 13
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	0e 94 30 02 	call	0x460	; 0x460 <LCD_movecursor>
			
		if(temp>=1000){
 4dc:	28 ee       	ldi	r18, 0xE8	; 232
 4de:	c2 16       	cp	r12, r18
 4e0:	23 e0       	ldi	r18, 0x03	; 3
 4e2:	d2 06       	cpc	r13, r18
 4e4:	08 f4       	brcc	.+2      	; 0x4e8 <main+0x46>
 4e6:	b7 c0       	rjmp	.+366    	; 0x656 <main+0x1b4>
			t = (temp-1000)/10;
 4e8:	38 ee       	ldi	r19, 0xE8	; 232
 4ea:	c3 1a       	sub	r12, r19
 4ec:	33 e0       	ldi	r19, 0x03	; 3
 4ee:	d3 0a       	sbc	r13, r19
 4f0:	96 01       	movw	r18, r12
 4f2:	ad ec       	ldi	r26, 0xCD	; 205
 4f4:	bc ec       	ldi	r27, 0xCC	; 204
 4f6:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 4fa:	ec 01       	movw	r28, r24
 4fc:	d6 95       	lsr	r29
 4fe:	c7 95       	ror	r28
 500:	d6 95       	lsr	r29
 502:	c7 95       	ror	r28
 504:	d6 95       	lsr	r29
 506:	c7 95       	ror	r28
			
			if(t<10){
 508:	ca 30       	cpi	r28, 0x0A	; 10
 50a:	d1 05       	cpc	r29, r1
 50c:	78 f4       	brcc	.+30     	; 0x52c <main+0x8a>
				LCD_movecursor(1,13);
 50e:	6d e0       	ldi	r22, 0x0D	; 13
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	0e 94 30 02 	call	0x460	; 0x460 <LCD_movecursor>
				LCD_vSend_char(' ');
 516:	80 e2       	ldi	r24, 0x20	; 32
 518:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char(' ');
 51c:	80 e2       	ldi	r24, 0x20	; 32
 51e:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char(t+ '0');
 522:	8c 2f       	mov	r24, r28
 524:	80 5d       	subi	r24, 0xD0	; 208
 526:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
 52a:	c3 cf       	rjmp	.-122    	; 0x4b2 <main+0x10>
				
			}else if(t<100){
 52c:	c4 36       	cpi	r28, 0x64	; 100
 52e:	d1 05       	cpc	r29, r1
 530:	98 f5       	brcc	.+102    	; 0x598 <main+0xf6>
				LCD_movecursor(1,13);
 532:	6d e0       	ldi	r22, 0x0D	; 13
 534:	81 e0       	ldi	r24, 0x01	; 1
 536:	0e 94 30 02 	call	0x460	; 0x460 <LCD_movecursor>
				LCD_vSend_char(' ');
 53a:	80 e2       	ldi	r24, 0x20	; 32
 53c:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char((t/10) + '0');
 540:	96 01       	movw	r18, r12
 542:	36 95       	lsr	r19
 544:	27 95       	ror	r18
 546:	36 95       	lsr	r19
 548:	27 95       	ror	r18
 54a:	ab e7       	ldi	r26, 0x7B	; 123
 54c:	b4 e1       	ldi	r27, 0x14	; 20
 54e:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 552:	96 95       	lsr	r25
 554:	87 95       	ror	r24
 556:	80 5d       	subi	r24, 0xD0	; 208
 558:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char((t%10) + '0');
 55c:	9e 01       	movw	r18, r28
 55e:	ad ec       	ldi	r26, 0xCD	; 205
 560:	bc ec       	ldi	r27, 0xCC	; 204
 562:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 566:	96 95       	lsr	r25
 568:	87 95       	ror	r24
 56a:	96 95       	lsr	r25
 56c:	87 95       	ror	r24
 56e:	96 95       	lsr	r25
 570:	87 95       	ror	r24
 572:	9c 01       	movw	r18, r24
 574:	22 0f       	add	r18, r18
 576:	33 1f       	adc	r19, r19
 578:	88 0f       	add	r24, r24
 57a:	99 1f       	adc	r25, r25
 57c:	88 0f       	add	r24, r24
 57e:	99 1f       	adc	r25, r25
 580:	88 0f       	add	r24, r24
 582:	99 1f       	adc	r25, r25
 584:	82 0f       	add	r24, r18
 586:	93 1f       	adc	r25, r19
 588:	9e 01       	movw	r18, r28
 58a:	28 1b       	sub	r18, r24
 58c:	39 0b       	sbc	r19, r25
 58e:	c9 01       	movw	r24, r18
 590:	80 5d       	subi	r24, 0xD0	; 208
 592:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
 596:	8d cf       	rjmp	.-230    	; 0x4b2 <main+0x10>
				
			}else {
				LCD_movecursor(1,13);
 598:	6d e0       	ldi	r22, 0x0D	; 13
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	0e 94 30 02 	call	0x460	; 0x460 <LCD_movecursor>
				LCD_vSend_char((t/100) + '0');
 5a0:	96 01       	movw	r18, r12
 5a2:	36 95       	lsr	r19
 5a4:	27 95       	ror	r18
 5a6:	36 95       	lsr	r19
 5a8:	27 95       	ror	r18
 5aa:	36 95       	lsr	r19
 5ac:	27 95       	ror	r18
 5ae:	a5 ec       	ldi	r26, 0xC5	; 197
 5b0:	b0 e2       	ldi	r27, 0x20	; 32
 5b2:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 5b6:	92 95       	swap	r25
 5b8:	82 95       	swap	r24
 5ba:	8f 70       	andi	r24, 0x0F	; 15
 5bc:	89 27       	eor	r24, r25
 5be:	9f 70       	andi	r25, 0x0F	; 15
 5c0:	89 27       	eor	r24, r25
 5c2:	80 5d       	subi	r24, 0xD0	; 208
 5c4:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char(((t/10)%10) + '0');
 5c8:	96 01       	movw	r18, r12
 5ca:	36 95       	lsr	r19
 5cc:	27 95       	ror	r18
 5ce:	36 95       	lsr	r19
 5d0:	27 95       	ror	r18
 5d2:	ab e7       	ldi	r26, 0x7B	; 123
 5d4:	b4 e1       	ldi	r27, 0x14	; 20
 5d6:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 5da:	ac 01       	movw	r20, r24
 5dc:	56 95       	lsr	r21
 5de:	47 95       	ror	r20
 5e0:	9a 01       	movw	r18, r20
 5e2:	ad ec       	ldi	r26, 0xCD	; 205
 5e4:	bc ec       	ldi	r27, 0xCC	; 204
 5e6:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 5ea:	96 95       	lsr	r25
 5ec:	87 95       	ror	r24
 5ee:	96 95       	lsr	r25
 5f0:	87 95       	ror	r24
 5f2:	96 95       	lsr	r25
 5f4:	87 95       	ror	r24
 5f6:	9c 01       	movw	r18, r24
 5f8:	22 0f       	add	r18, r18
 5fa:	33 1f       	adc	r19, r19
 5fc:	88 0f       	add	r24, r24
 5fe:	99 1f       	adc	r25, r25
 600:	88 0f       	add	r24, r24
 602:	99 1f       	adc	r25, r25
 604:	88 0f       	add	r24, r24
 606:	99 1f       	adc	r25, r25
 608:	82 0f       	add	r24, r18
 60a:	93 1f       	adc	r25, r19
 60c:	9a 01       	movw	r18, r20
 60e:	28 1b       	sub	r18, r24
 610:	39 0b       	sbc	r19, r25
 612:	c9 01       	movw	r24, r18
 614:	80 5d       	subi	r24, 0xD0	; 208
 616:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char((t%10) + '0');
 61a:	9e 01       	movw	r18, r28
 61c:	ad ec       	ldi	r26, 0xCD	; 205
 61e:	bc ec       	ldi	r27, 0xCC	; 204
 620:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 624:	96 95       	lsr	r25
 626:	87 95       	ror	r24
 628:	96 95       	lsr	r25
 62a:	87 95       	ror	r24
 62c:	96 95       	lsr	r25
 62e:	87 95       	ror	r24
 630:	9c 01       	movw	r18, r24
 632:	22 0f       	add	r18, r18
 634:	33 1f       	adc	r19, r19
 636:	88 0f       	add	r24, r24
 638:	99 1f       	adc	r25, r25
 63a:	88 0f       	add	r24, r24
 63c:	99 1f       	adc	r25, r25
 63e:	88 0f       	add	r24, r24
 640:	99 1f       	adc	r25, r25
 642:	82 0f       	add	r24, r18
 644:	93 1f       	adc	r25, r19
 646:	9e 01       	movw	r18, r28
 648:	28 1b       	sub	r18, r24
 64a:	39 0b       	sbc	r19, r25
 64c:	c9 01       	movw	r24, r18
 64e:	80 5d       	subi	r24, 0xD0	; 208
 650:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
 654:	2e cf       	rjmp	.-420    	; 0x4b2 <main+0x10>
			}
		}
		else{
			t = (1000-temp)/10;
 656:	28 ee       	ldi	r18, 0xE8	; 232
 658:	33 e0       	ldi	r19, 0x03	; 3
 65a:	79 01       	movw	r14, r18
 65c:	ec 18       	sub	r14, r12
 65e:	fd 08       	sbc	r15, r13
 660:	97 01       	movw	r18, r14
 662:	ad ec       	ldi	r26, 0xCD	; 205
 664:	bc ec       	ldi	r27, 0xCC	; 204
 666:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 66a:	ec 01       	movw	r28, r24
 66c:	d6 95       	lsr	r29
 66e:	c7 95       	ror	r28
 670:	d6 95       	lsr	r29
 672:	c7 95       	ror	r28
 674:	d6 95       	lsr	r29
 676:	c7 95       	ror	r28
			
			if(t<10){
 678:	ca 30       	cpi	r28, 0x0A	; 10
 67a:	d1 05       	cpc	r29, r1
 67c:	78 f4       	brcc	.+30     	; 0x69c <main+0x1fa>
				LCD_movecursor(1,13);
 67e:	6d e0       	ldi	r22, 0x0D	; 13
 680:	81 e0       	ldi	r24, 0x01	; 1
 682:	0e 94 30 02 	call	0x460	; 0x460 <LCD_movecursor>
				LCD_vSend_char(' ');
 686:	80 e2       	ldi	r24, 0x20	; 32
 688:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char('-');
 68c:	8d e2       	ldi	r24, 0x2D	; 45
 68e:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char(t+'0');
 692:	8c 2f       	mov	r24, r28
 694:	80 5d       	subi	r24, 0xD0	; 208
 696:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
 69a:	0b cf       	rjmp	.-490    	; 0x4b2 <main+0x10>

			}else if(t<100){
 69c:	c4 36       	cpi	r28, 0x64	; 100
 69e:	d1 05       	cpc	r29, r1
 6a0:	08 f0       	brcs	.+2      	; 0x6a4 <main+0x202>
 6a2:	07 cf       	rjmp	.-498    	; 0x4b2 <main+0x10>
				LCD_movecursor(1,13);
 6a4:	6d e0       	ldi	r22, 0x0D	; 13
 6a6:	81 e0       	ldi	r24, 0x01	; 1
 6a8:	0e 94 30 02 	call	0x460	; 0x460 <LCD_movecursor>
				LCD_vSend_char('-');
 6ac:	8d e2       	ldi	r24, 0x2D	; 45
 6ae:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char(t/10 + '0');
 6b2:	97 01       	movw	r18, r14
 6b4:	36 95       	lsr	r19
 6b6:	27 95       	ror	r18
 6b8:	36 95       	lsr	r19
 6ba:	27 95       	ror	r18
 6bc:	ab e7       	ldi	r26, 0x7B	; 123
 6be:	b4 e1       	ldi	r27, 0x14	; 20
 6c0:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 6c4:	96 95       	lsr	r25
 6c6:	87 95       	ror	r24
 6c8:	80 5d       	subi	r24, 0xD0	; 208
 6ca:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
				LCD_vSend_char(t%10 + '0');
 6ce:	9e 01       	movw	r18, r28
 6d0:	ad ec       	ldi	r26, 0xCD	; 205
 6d2:	bc ec       	ldi	r27, 0xCC	; 204
 6d4:	0e 94 af 04 	call	0x95e	; 0x95e <__umulhisi3>
 6d8:	96 95       	lsr	r25
 6da:	87 95       	ror	r24
 6dc:	96 95       	lsr	r25
 6de:	87 95       	ror	r24
 6e0:	96 95       	lsr	r25
 6e2:	87 95       	ror	r24
 6e4:	9c 01       	movw	r18, r24
 6e6:	22 0f       	add	r18, r18
 6e8:	33 1f       	adc	r19, r19
 6ea:	88 0f       	add	r24, r24
 6ec:	99 1f       	adc	r25, r25
 6ee:	88 0f       	add	r24, r24
 6f0:	99 1f       	adc	r25, r25
 6f2:	88 0f       	add	r24, r24
 6f4:	99 1f       	adc	r25, r25
 6f6:	82 0f       	add	r24, r18
 6f8:	93 1f       	adc	r25, r19
 6fa:	9e 01       	movw	r18, r28
 6fc:	28 1b       	sub	r18, r24
 6fe:	39 0b       	sbc	r19, r25
 700:	c9 01       	movw	r24, r18
 702:	80 5d       	subi	r24, 0xD0	; 208
 704:	0e 94 01 02 	call	0x402	; 0x402 <LCD_vSend_char>
 708:	d4 ce       	rjmp	.-600    	; 0x4b2 <main+0x10>

0000070a <__fixunssfsi>:
 70a:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__fp_splitA>
 70e:	88 f0       	brcs	.+34     	; 0x732 <__fixunssfsi+0x28>
 710:	9f 57       	subi	r25, 0x7F	; 127
 712:	98 f0       	brcs	.+38     	; 0x73a <__fixunssfsi+0x30>
 714:	b9 2f       	mov	r27, r25
 716:	99 27       	eor	r25, r25
 718:	b7 51       	subi	r27, 0x17	; 23
 71a:	b0 f0       	brcs	.+44     	; 0x748 <__fixunssfsi+0x3e>
 71c:	e1 f0       	breq	.+56     	; 0x756 <__fixunssfsi+0x4c>
 71e:	66 0f       	add	r22, r22
 720:	77 1f       	adc	r23, r23
 722:	88 1f       	adc	r24, r24
 724:	99 1f       	adc	r25, r25
 726:	1a f0       	brmi	.+6      	; 0x72e <__fixunssfsi+0x24>
 728:	ba 95       	dec	r27
 72a:	c9 f7       	brne	.-14     	; 0x71e <__fixunssfsi+0x14>
 72c:	14 c0       	rjmp	.+40     	; 0x756 <__fixunssfsi+0x4c>
 72e:	b1 30       	cpi	r27, 0x01	; 1
 730:	91 f0       	breq	.+36     	; 0x756 <__fixunssfsi+0x4c>
 732:	0e 94 13 04 	call	0x826	; 0x826 <__fp_zero>
 736:	b1 e0       	ldi	r27, 0x01	; 1
 738:	08 95       	ret
 73a:	0c 94 13 04 	jmp	0x826	; 0x826 <__fp_zero>
 73e:	67 2f       	mov	r22, r23
 740:	78 2f       	mov	r23, r24
 742:	88 27       	eor	r24, r24
 744:	b8 5f       	subi	r27, 0xF8	; 248
 746:	39 f0       	breq	.+14     	; 0x756 <__fixunssfsi+0x4c>
 748:	b9 3f       	cpi	r27, 0xF9	; 249
 74a:	cc f3       	brlt	.-14     	; 0x73e <__fixunssfsi+0x34>
 74c:	86 95       	lsr	r24
 74e:	77 95       	ror	r23
 750:	67 95       	ror	r22
 752:	b3 95       	inc	r27
 754:	d9 f7       	brne	.-10     	; 0x74c <__fixunssfsi+0x42>
 756:	3e f4       	brtc	.+14     	; 0x766 <__fixunssfsi+0x5c>
 758:	90 95       	com	r25
 75a:	80 95       	com	r24
 75c:	70 95       	com	r23
 75e:	61 95       	neg	r22
 760:	7f 4f       	sbci	r23, 0xFF	; 255
 762:	8f 4f       	sbci	r24, 0xFF	; 255
 764:	9f 4f       	sbci	r25, 0xFF	; 255
 766:	08 95       	ret

00000768 <__floatunsisf>:
 768:	e8 94       	clt
 76a:	09 c0       	rjmp	.+18     	; 0x77e <__floatsisf+0x12>

0000076c <__floatsisf>:
 76c:	97 fb       	bst	r25, 7
 76e:	3e f4       	brtc	.+14     	; 0x77e <__floatsisf+0x12>
 770:	90 95       	com	r25
 772:	80 95       	com	r24
 774:	70 95       	com	r23
 776:	61 95       	neg	r22
 778:	7f 4f       	sbci	r23, 0xFF	; 255
 77a:	8f 4f       	sbci	r24, 0xFF	; 255
 77c:	9f 4f       	sbci	r25, 0xFF	; 255
 77e:	99 23       	and	r25, r25
 780:	a9 f0       	breq	.+42     	; 0x7ac <__floatsisf+0x40>
 782:	f9 2f       	mov	r31, r25
 784:	96 e9       	ldi	r25, 0x96	; 150
 786:	bb 27       	eor	r27, r27
 788:	93 95       	inc	r25
 78a:	f6 95       	lsr	r31
 78c:	87 95       	ror	r24
 78e:	77 95       	ror	r23
 790:	67 95       	ror	r22
 792:	b7 95       	ror	r27
 794:	f1 11       	cpse	r31, r1
 796:	f8 cf       	rjmp	.-16     	; 0x788 <__floatsisf+0x1c>
 798:	fa f4       	brpl	.+62     	; 0x7d8 <__floatsisf+0x6c>
 79a:	bb 0f       	add	r27, r27
 79c:	11 f4       	brne	.+4      	; 0x7a2 <__floatsisf+0x36>
 79e:	60 ff       	sbrs	r22, 0
 7a0:	1b c0       	rjmp	.+54     	; 0x7d8 <__floatsisf+0x6c>
 7a2:	6f 5f       	subi	r22, 0xFF	; 255
 7a4:	7f 4f       	sbci	r23, 0xFF	; 255
 7a6:	8f 4f       	sbci	r24, 0xFF	; 255
 7a8:	9f 4f       	sbci	r25, 0xFF	; 255
 7aa:	16 c0       	rjmp	.+44     	; 0x7d8 <__floatsisf+0x6c>
 7ac:	88 23       	and	r24, r24
 7ae:	11 f0       	breq	.+4      	; 0x7b4 <__floatsisf+0x48>
 7b0:	96 e9       	ldi	r25, 0x96	; 150
 7b2:	11 c0       	rjmp	.+34     	; 0x7d6 <__floatsisf+0x6a>
 7b4:	77 23       	and	r23, r23
 7b6:	21 f0       	breq	.+8      	; 0x7c0 <__floatsisf+0x54>
 7b8:	9e e8       	ldi	r25, 0x8E	; 142
 7ba:	87 2f       	mov	r24, r23
 7bc:	76 2f       	mov	r23, r22
 7be:	05 c0       	rjmp	.+10     	; 0x7ca <__floatsisf+0x5e>
 7c0:	66 23       	and	r22, r22
 7c2:	71 f0       	breq	.+28     	; 0x7e0 <__floatsisf+0x74>
 7c4:	96 e8       	ldi	r25, 0x86	; 134
 7c6:	86 2f       	mov	r24, r22
 7c8:	70 e0       	ldi	r23, 0x00	; 0
 7ca:	60 e0       	ldi	r22, 0x00	; 0
 7cc:	2a f0       	brmi	.+10     	; 0x7d8 <__floatsisf+0x6c>
 7ce:	9a 95       	dec	r25
 7d0:	66 0f       	add	r22, r22
 7d2:	77 1f       	adc	r23, r23
 7d4:	88 1f       	adc	r24, r24
 7d6:	da f7       	brpl	.-10     	; 0x7ce <__floatsisf+0x62>
 7d8:	88 0f       	add	r24, r24
 7da:	96 95       	lsr	r25
 7dc:	87 95       	ror	r24
 7de:	97 f9       	bld	r25, 7
 7e0:	08 95       	ret

000007e2 <__fp_split3>:
 7e2:	57 fd       	sbrc	r21, 7
 7e4:	90 58       	subi	r25, 0x80	; 128
 7e6:	44 0f       	add	r20, r20
 7e8:	55 1f       	adc	r21, r21
 7ea:	59 f0       	breq	.+22     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7ec:	5f 3f       	cpi	r21, 0xFF	; 255
 7ee:	71 f0       	breq	.+28     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 7f0:	47 95       	ror	r20

000007f2 <__fp_splitA>:
 7f2:	88 0f       	add	r24, r24
 7f4:	97 fb       	bst	r25, 7
 7f6:	99 1f       	adc	r25, r25
 7f8:	61 f0       	breq	.+24     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7fa:	9f 3f       	cpi	r25, 0xFF	; 255
 7fc:	79 f0       	breq	.+30     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 7fe:	87 95       	ror	r24
 800:	08 95       	ret
 802:	12 16       	cp	r1, r18
 804:	13 06       	cpc	r1, r19
 806:	14 06       	cpc	r1, r20
 808:	55 1f       	adc	r21, r21
 80a:	f2 cf       	rjmp	.-28     	; 0x7f0 <__fp_split3+0xe>
 80c:	46 95       	lsr	r20
 80e:	f1 df       	rcall	.-30     	; 0x7f2 <__fp_splitA>
 810:	08 c0       	rjmp	.+16     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 812:	16 16       	cp	r1, r22
 814:	17 06       	cpc	r1, r23
 816:	18 06       	cpc	r1, r24
 818:	99 1f       	adc	r25, r25
 81a:	f1 cf       	rjmp	.-30     	; 0x7fe <__fp_splitA+0xc>
 81c:	86 95       	lsr	r24
 81e:	71 05       	cpc	r23, r1
 820:	61 05       	cpc	r22, r1
 822:	08 94       	sec
 824:	08 95       	ret

00000826 <__fp_zero>:
 826:	e8 94       	clt

00000828 <__fp_szero>:
 828:	bb 27       	eor	r27, r27
 82a:	66 27       	eor	r22, r22
 82c:	77 27       	eor	r23, r23
 82e:	cb 01       	movw	r24, r22
 830:	97 f9       	bld	r25, 7
 832:	08 95       	ret

00000834 <__mulsf3>:
 834:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3x>
 838:	0c 94 9e 04 	jmp	0x93c	; 0x93c <__fp_round>
 83c:	0e 94 90 04 	call	0x920	; 0x920 <__fp_pscA>
 840:	38 f0       	brcs	.+14     	; 0x850 <__mulsf3+0x1c>
 842:	0e 94 97 04 	call	0x92e	; 0x92e <__fp_pscB>
 846:	20 f0       	brcs	.+8      	; 0x850 <__mulsf3+0x1c>
 848:	95 23       	and	r25, r21
 84a:	11 f0       	breq	.+4      	; 0x850 <__mulsf3+0x1c>
 84c:	0c 94 87 04 	jmp	0x90e	; 0x90e <__fp_inf>
 850:	0c 94 8d 04 	jmp	0x91a	; 0x91a <__fp_nan>
 854:	11 24       	eor	r1, r1
 856:	0c 94 14 04 	jmp	0x828	; 0x828 <__fp_szero>

0000085a <__mulsf3x>:
 85a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__fp_split3>
 85e:	70 f3       	brcs	.-36     	; 0x83c <__mulsf3+0x8>

00000860 <__mulsf3_pse>:
 860:	95 9f       	mul	r25, r21
 862:	c1 f3       	breq	.-16     	; 0x854 <__mulsf3+0x20>
 864:	95 0f       	add	r25, r21
 866:	50 e0       	ldi	r21, 0x00	; 0
 868:	55 1f       	adc	r21, r21
 86a:	62 9f       	mul	r22, r18
 86c:	f0 01       	movw	r30, r0
 86e:	72 9f       	mul	r23, r18
 870:	bb 27       	eor	r27, r27
 872:	f0 0d       	add	r31, r0
 874:	b1 1d       	adc	r27, r1
 876:	63 9f       	mul	r22, r19
 878:	aa 27       	eor	r26, r26
 87a:	f0 0d       	add	r31, r0
 87c:	b1 1d       	adc	r27, r1
 87e:	aa 1f       	adc	r26, r26
 880:	64 9f       	mul	r22, r20
 882:	66 27       	eor	r22, r22
 884:	b0 0d       	add	r27, r0
 886:	a1 1d       	adc	r26, r1
 888:	66 1f       	adc	r22, r22
 88a:	82 9f       	mul	r24, r18
 88c:	22 27       	eor	r18, r18
 88e:	b0 0d       	add	r27, r0
 890:	a1 1d       	adc	r26, r1
 892:	62 1f       	adc	r22, r18
 894:	73 9f       	mul	r23, r19
 896:	b0 0d       	add	r27, r0
 898:	a1 1d       	adc	r26, r1
 89a:	62 1f       	adc	r22, r18
 89c:	83 9f       	mul	r24, r19
 89e:	a0 0d       	add	r26, r0
 8a0:	61 1d       	adc	r22, r1
 8a2:	22 1f       	adc	r18, r18
 8a4:	74 9f       	mul	r23, r20
 8a6:	33 27       	eor	r19, r19
 8a8:	a0 0d       	add	r26, r0
 8aa:	61 1d       	adc	r22, r1
 8ac:	23 1f       	adc	r18, r19
 8ae:	84 9f       	mul	r24, r20
 8b0:	60 0d       	add	r22, r0
 8b2:	21 1d       	adc	r18, r1
 8b4:	82 2f       	mov	r24, r18
 8b6:	76 2f       	mov	r23, r22
 8b8:	6a 2f       	mov	r22, r26
 8ba:	11 24       	eor	r1, r1
 8bc:	9f 57       	subi	r25, 0x7F	; 127
 8be:	50 40       	sbci	r21, 0x00	; 0
 8c0:	9a f0       	brmi	.+38     	; 0x8e8 <__mulsf3_pse+0x88>
 8c2:	f1 f0       	breq	.+60     	; 0x900 <__mulsf3_pse+0xa0>
 8c4:	88 23       	and	r24, r24
 8c6:	4a f0       	brmi	.+18     	; 0x8da <__mulsf3_pse+0x7a>
 8c8:	ee 0f       	add	r30, r30
 8ca:	ff 1f       	adc	r31, r31
 8cc:	bb 1f       	adc	r27, r27
 8ce:	66 1f       	adc	r22, r22
 8d0:	77 1f       	adc	r23, r23
 8d2:	88 1f       	adc	r24, r24
 8d4:	91 50       	subi	r25, 0x01	; 1
 8d6:	50 40       	sbci	r21, 0x00	; 0
 8d8:	a9 f7       	brne	.-22     	; 0x8c4 <__mulsf3_pse+0x64>
 8da:	9e 3f       	cpi	r25, 0xFE	; 254
 8dc:	51 05       	cpc	r21, r1
 8de:	80 f0       	brcs	.+32     	; 0x900 <__mulsf3_pse+0xa0>
 8e0:	0c 94 87 04 	jmp	0x90e	; 0x90e <__fp_inf>
 8e4:	0c 94 14 04 	jmp	0x828	; 0x828 <__fp_szero>
 8e8:	5f 3f       	cpi	r21, 0xFF	; 255
 8ea:	e4 f3       	brlt	.-8      	; 0x8e4 <__mulsf3_pse+0x84>
 8ec:	98 3e       	cpi	r25, 0xE8	; 232
 8ee:	d4 f3       	brlt	.-12     	; 0x8e4 <__mulsf3_pse+0x84>
 8f0:	86 95       	lsr	r24
 8f2:	77 95       	ror	r23
 8f4:	67 95       	ror	r22
 8f6:	b7 95       	ror	r27
 8f8:	f7 95       	ror	r31
 8fa:	e7 95       	ror	r30
 8fc:	9f 5f       	subi	r25, 0xFF	; 255
 8fe:	c1 f7       	brne	.-16     	; 0x8f0 <__mulsf3_pse+0x90>
 900:	fe 2b       	or	r31, r30
 902:	88 0f       	add	r24, r24
 904:	91 1d       	adc	r25, r1
 906:	96 95       	lsr	r25
 908:	87 95       	ror	r24
 90a:	97 f9       	bld	r25, 7
 90c:	08 95       	ret

0000090e <__fp_inf>:
 90e:	97 f9       	bld	r25, 7
 910:	9f 67       	ori	r25, 0x7F	; 127
 912:	80 e8       	ldi	r24, 0x80	; 128
 914:	70 e0       	ldi	r23, 0x00	; 0
 916:	60 e0       	ldi	r22, 0x00	; 0
 918:	08 95       	ret

0000091a <__fp_nan>:
 91a:	9f ef       	ldi	r25, 0xFF	; 255
 91c:	80 ec       	ldi	r24, 0xC0	; 192
 91e:	08 95       	ret

00000920 <__fp_pscA>:
 920:	00 24       	eor	r0, r0
 922:	0a 94       	dec	r0
 924:	16 16       	cp	r1, r22
 926:	17 06       	cpc	r1, r23
 928:	18 06       	cpc	r1, r24
 92a:	09 06       	cpc	r0, r25
 92c:	08 95       	ret

0000092e <__fp_pscB>:
 92e:	00 24       	eor	r0, r0
 930:	0a 94       	dec	r0
 932:	12 16       	cp	r1, r18
 934:	13 06       	cpc	r1, r19
 936:	14 06       	cpc	r1, r20
 938:	05 06       	cpc	r0, r21
 93a:	08 95       	ret

0000093c <__fp_round>:
 93c:	09 2e       	mov	r0, r25
 93e:	03 94       	inc	r0
 940:	00 0c       	add	r0, r0
 942:	11 f4       	brne	.+4      	; 0x948 <__fp_round+0xc>
 944:	88 23       	and	r24, r24
 946:	52 f0       	brmi	.+20     	; 0x95c <__fp_round+0x20>
 948:	bb 0f       	add	r27, r27
 94a:	40 f4       	brcc	.+16     	; 0x95c <__fp_round+0x20>
 94c:	bf 2b       	or	r27, r31
 94e:	11 f4       	brne	.+4      	; 0x954 <__fp_round+0x18>
 950:	60 ff       	sbrs	r22, 0
 952:	04 c0       	rjmp	.+8      	; 0x95c <__fp_round+0x20>
 954:	6f 5f       	subi	r22, 0xFF	; 255
 956:	7f 4f       	sbci	r23, 0xFF	; 255
 958:	8f 4f       	sbci	r24, 0xFF	; 255
 95a:	9f 4f       	sbci	r25, 0xFF	; 255
 95c:	08 95       	ret

0000095e <__umulhisi3>:
 95e:	a2 9f       	mul	r26, r18
 960:	b0 01       	movw	r22, r0
 962:	b3 9f       	mul	r27, r19
 964:	c0 01       	movw	r24, r0
 966:	a3 9f       	mul	r26, r19
 968:	70 0d       	add	r23, r0
 96a:	81 1d       	adc	r24, r1
 96c:	11 24       	eor	r1, r1
 96e:	91 1d       	adc	r25, r1
 970:	b2 9f       	mul	r27, r18
 972:	70 0d       	add	r23, r0
 974:	81 1d       	adc	r24, r1
 976:	11 24       	eor	r1, r1
 978:	91 1d       	adc	r25, r1
 97a:	08 95       	ret

0000097c <_exit>:
 97c:	f8 94       	cli

0000097e <__stop_program>:
 97e:	ff cf       	rjmp	.-2      	; 0x97e <__stop_program>
